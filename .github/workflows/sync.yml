name: Sync Zashboard Release

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      # Step 1: Get the latest release from the Zashboard repository
      - name: Get latest release
        id: get_release
        run: |
          repo="Zephyruso/zashboard"
          response=$(curl -s https://api.github.com/repos/$repo/releases/latest)
          echo "$response" | jq -r '.tag_name,.assets[].browser_download_url' > release_info.txt
          tag=$(head -1 release_info.txt)
          zip_url=$(tail -1 release_info.txt)
          echo "::set-output name=tag::$tag"
          echo "::set-output name=zip_url::$zip_url"

      # Step 2: Check if last_version.txt exists
      - name: Check for last_version.txt
        id: check_version_file
        run: |
          if [ -f "last_version.txt" ]; then
            echo "last_version.txt exists."
          else
            echo "No last_version.txt file found. Creating one."
            echo "none" > last_version.txt
          fi

      # Step 3: Compare the latest release with last_version.txt
      - name: Check if new release is available
        id: check_new_release
        run: |
          last_version=$(cat last_version.txt)
          echo "Last downloaded version: $last_version"
          if [ "$last_version" = "${{ steps.get_release.outputs.tag }}" ]; then
            echo "No new release. Latest version is already downloaded."
            echo "::set-output name=skip::true"
          else
            echo "New release detected: ${{ steps.get_release.outputs.tag }}"
            echo "::set-output name=skip::false"
          fi

      # Step 4: Stop workflow if no new release
      - name: Skip if no new release
        if: ${{ steps.check_new_release.outputs.skip == 'true' }}
        run: echo "No new release. Skipping further steps."

      # Step 5: Download the `dist.zip` file if a new release is detected
      - name: Download dist.zip
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          curl -L -o dist.zip "${{ steps.get_release.outputs.zip_url }}"

      # Step 6: Extract the `dist.zip` file
      - name: Extract dist.zip
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          unzip dist.zip -d dist

      # Step 7: Cleanup root directory
      - name: Cleanup root directory
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          find . -maxdepth 1 ! -name '.github' ! -name 'last_version.txt' ! -name '.' ! -name '..' -exec rm -rf {} +

      # Step 8: Move files to root
      - name: Move files to root
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          shopt -s dotglob
          mv dist/* ./
          rm -rf dist dist.zip

      # Step 9: Update last_version.txt
      - name: Update last_version.txt
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          echo "${{ steps.get_release.outputs.tag }}" > last_version.txt

      # Step 10: Commit and push changes
      - name: Commit and push changes
        if: ${{ steps.check_new_release.outputs.skip == 'false' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --quiet && git diff --cached --quiet || git commit -m "Update from Zashboard release ${{ steps.get_release.outputs.tag }}"
          git push
