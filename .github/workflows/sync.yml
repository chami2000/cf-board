name: Sync Zashboard Release

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allows manual triggering

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3

      # Step 1: Get the latest release from the Zashboard repository
      - name: Get latest release
        id: get_release
        run: |
          repo="Zephyruso/zashboard"
          response=$(curl -s https://api.github.com/repos/$repo/releases/latest)
          echo "$response" | jq -r '.tag_name,.assets[].browser_download_url' > release_info.txt
          tag=$(head -1 release_info.txt)
          zip_url=$(tail -1 release_info.txt)
          echo "::set-output name=tag::$tag"
          echo "::set-output name=zip_url::$zip_url"

      # Step 2: Check if the release tag is already deployed
      - name: Check if already up-to-date
        id: check_version
        run: |
          echo "Checking if release ${{ steps.get_release.outputs.tag }} is already deployed..."
          if git log --grep="Update from Zashboard release ${{ steps.get_release.outputs.tag }}" -n 1 > /dev/null; then
            echo "The latest release is already deployed."
            echo "::set-output name=skip::true"
          else
            echo "New release detected: ${{ steps.get_release.outputs.tag }}"
            echo "::set-output name=skip::false"
          fi

      # Step 3: Stop workflow if no new release
      - name: Skip if no new release
        if: ${{ steps.check_version.outputs.skip == 'true' }}
        run: echo "No new release. Skipping further steps."

      # Step 4: Download the `dist.zip` file if a new release is detected
      - name: Download dist.zip
        if: ${{ steps.check_version.outputs.skip == 'false' }}
        run: |
          curl -L -o dist.zip "${{ steps.get_release.outputs.zip_url }}"

      # Step 5: Extract the `dist.zip` file
      - name: Extract dist.zip
        if: ${{ steps.check_version.outputs.skip == 'false' }}
        run: |
          unzip dist.zip -d dist

      # Step 6: Cleanup root directory
      - name: Cleanup root directory
        if: ${{ steps.check_version.outputs.skip == 'false' }}
        run: |
          find . -maxdepth 1 ! -name '.github' ! -name '.' ! -name '..' -exec rm -rf {} +

      # Step 7: Move files to root
      - name: Move files to root
        if: ${{ steps.check_version.outputs.skip == 'false' }}
        run: |
          shopt -s dotglob
          mv dist/* ./
          rm -rf dist dist.zip

      # Step 8: Commit and push changes
      - name: Commit and push changes
        if: ${{ steps.check_version.outputs.skip == 'false' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --quiet && git diff --cached --quiet || git commit -m "Update from Zashboard release ${{ steps.get_release.outputs.tag }}"
          git push
